<launch>
  <arg name="simulation" default="false"/>
  <group unless="$(arg simulation)"> <!-- Real robot -->
    <include file="$(find turtlebot_follower)/launch/includes/velocity_smoother.launch.xml"/>
    <include file="$(find turtlebot_follower)/launch/includes/safety_controller.launch.xml"/>

    <param name="camera/rgb/image_color/compressed/jpeg_quality" value="22"/>
    
    <include file="$(find turtlebot_bringup)/launch/3dsensor.launch">
      <arg name="rgb_processing"                  value="true"/>  <!-- only required if we use android client -->
      <arg name="depth_processing"                value="true"/>
      <arg name="depth_registered_processing"     value="false"/>
      <arg name="depth_registration"              value="false"/>
      <arg name="disparity_processing"            value="false"/>
      <arg name="disparity_registered_processing" value="false"/>
      <arg name="scan_processing"                 value="false"/>
    </include>

    <!-- Make a slower camera feed available; only required if we use android client -->
    <node pkg="topic_tools" type="throttle" name="camera_throttle"
          args="messages camera/rgb/image_color/compressed 5"/>

  <!--  Load turtlebot follower into the 3d sensors nodelet manager to avoid pointcloud serializing -->
  <node pkg="gaitech_edu" name="follower" type="follower.py" output="screen">
    <remap from="point_cloud" to="/camera/depth/points" />
    
    <rosparam>
       min_x: -0.3
       max_x: 0.3
       min_y: 0.1
       max_y: 0.5
       max_z: 1.6
       goal_z: 0.8
       z_threshold: 0.025
       x_threshold: 0.025
       z_scale: 1.0
       x_scale: 3.0
       max_angular_speed: 5.0
       min_angular_speed: 0.1
       max_linear_speed: 0.4
       min_linear_speed: 0.05
    </rosparam>

  </node>

  </group>

</launch>
